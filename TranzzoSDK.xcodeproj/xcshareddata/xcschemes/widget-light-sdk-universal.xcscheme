<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1030"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "CE4C74E92301584E00D46438"
               BuildableName = "TranzzoSDK.framework"
               BlueprintName = "TranzzoSDK"
               ReferencedContainer = "container:TranzzoSDK.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "CE4C74F22301584E00D46438"
               BuildableName = "TranzzoSDKTests.xctest"
               BlueprintName = "TranzzoSDKTests"
               ReferencedContainer = "container:TranzzoSDK.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "CE4C74E92301584E00D46438"
            BuildableName = "TranzzoSDK.framework"
            BlueprintName = "TranzzoSDK"
            ReferencedContainer = "container:TranzzoSDK.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <AdditionalOptions>
      </AdditionalOptions>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Release"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "CE4C74E92301584E00D46438"
            BuildableName = "TranzzoSDK.framework"
            BlueprintName = "TranzzoSDK"
            ReferencedContainer = "container:TranzzoSDK.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <AdditionalOptions>
      </AdditionalOptions>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "CE4C74E92301584E00D46438"
            BuildableName = "TranzzoSDK.framework"
            BlueprintName = "TranzzoSDK"
            ReferencedContainer = "container:TranzzoSDK.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "#  This is a modified script and it will ask the target to build separate libraries for simulator and device etc   &#10;# On project folder it will be found under Generated-Frameworks folder  &#10;# As per the documentations for XCode 10 Apple does not allow building FAT librares  &#10;# Go ahead and check https://forums.developer.apple.com/thread/66978 and https://forums.developer.apple.com/thread/109583  &#10;# Enjoy NicoX :)  &#10;&#10;set -e  &#10;# If we&apos;re already inside this script then die  &#10;if [ -n &quot;$MULTIPLATFORM_BUILD_IN_PROGRESS&quot; ]; then  &#10;exit 0  &#10;fi  &#10;export MULTIPLATFORM_BUILD_IN_PROGRESS=1  &#10;&#10;############################################  &#10;# Options  &#10;############################################  &#10;REVEAL_ARCHIVE_IN_FINDER=true  &#10;OUTPUT_DIR_NAME=&quot;Generated-Frameworks&quot;  &#10;FRAMEWORK_NAME=&quot;${PROJECT_NAME}&quot;  &#10;&#10;OUTPUT_DIR=&quot;${PROJECT_DIR}/${OUTPUT_DIR_NAME}/${FRAMEWORK_NAME}-${CONFIGURATION}-framework/&quot;  &#10;SIMULATOR_LIBRARY_OUT_DIR=&quot;${OUTPUT_DIR}/Simulator/&quot;  &#10;GENERATED_LIBRARY_DIR=&quot;${BUILD_DIR}/${CONFIGURATION}-iphoneuniversal&quot;  &#10;SIMULATOR_FRAMEWORK_OUT_DIR=&quot;${GENERATED_LIBRARY_DIR}/Simulator&quot;  &#10;FRAMEWORK=&quot;${SIMULATOR_FRAMEWORK_OUT_DIR}/${FRAMEWORK_NAME}.framework&quot;  &#10;&#10;########################################################################  &#10;# Build Frameworks  &#10;########################################################################  &#10;xcodebuild -workspace ${PROJECT_NAME}.xcworkspace -scheme ${PROJECT_NAME} -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} clean build CONFIGURATION_BUILD_DIR=${BUILD_DIR}/${CONFIGURATION}-iphonesimulator OBJROOT=&quot;${OBJROOT}/DependantBuilds&quot;   &#10;&#10;########################################################################  &#10;# Create directory for general  &#10;########################################################################  &#10;rm -rf &quot;${GENERATED_LIBRARY_DIR}&quot;  &#10;mkdir &quot;${GENERATED_LIBRARY_DIR}&quot;  &#10;mkdir &quot;${SIMULATOR_FRAMEWORK_OUT_DIR}&quot;  &#10;mkdir &quot;${FRAMEWORK}&quot;  &#10;&#10;########################################################################  &#10;# Copy files Framework  &#10;########################################################################  &#10;SIMULATOR_LIBRARY_PATH=&quot;${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${FRAMEWORK_NAME}.framework&quot;  &#10;&#10;########################################################################  &#10;# Make a binary for simulaotr ie. x86_64 ot i386 file system  &#10;########################################################################  &#10;# For Swift framework, Swiftmodule needs to be copied in the universal framework   &#10;if [ -d &quot;${SIMULATOR_LIBRARY_PATH}/Modules/${FRAMEWORK_NAME}.swiftmodule/&quot; ]; then  &#10;cp -f &quot;${SIMULATOR_LIBRARY_PATH}/Modules/${FRAMEWORK_NAME}.swiftmodule/&quot;* &quot;${FRAMEWORK}/Modules/${FRAMEWORK_NAME}.swiftmodule/&quot; | echo  &#10;fi  &#10;cp -r &quot;${SIMULATOR_LIBRARY_PATH}/.&quot; &quot;${FRAMEWORK}&quot;  &#10;&#10;########################################################################  &#10;# Copy simulator build library in output folder  &#10;########################################################################  &#10;rm -rf &quot;$OUTPUT_DIR&quot;  &#10;mkdir -p &quot;$OUTPUT_DIR&quot;  &#10;mkdir -p ${SIMULATOR_LIBRARY_OUT_DIR}  &#10;&#10;cp -r &quot;${FRAMEWORK}&quot; &quot;$SIMULATOR_LIBRARY_OUT_DIR&quot;  &#10;#########################################################################  &#10;&#10;echo &quot;Simulator Lib Path ----&gt;&quot; &quot;${SIMULATOR_LIBRARY_PATH}&quot; &quot;&lt;----&quot;  &#10;&#10;if [ ${REVEAL_ARCHIVE_IN_FINDER} = true ]; then  &#10;open &quot;${SIMULATOR_LIBRARY_OUT_DIR}/&quot;  &#10;fi  &#10;&#10;&#10;##########################################################################  &#10;# Now lets build for device; shall we?  &#10;##########################################################################  &#10;DEVICE_LIBRARY_OUT_DIR=&quot;${OUTPUT_DIR}/Device/&quot;  &#10;DEVICE_FRAMEWORK_OUT_DIR=&quot;${GENERATED_LIBRARY_DIR}/Device&quot;  &#10;FRAMEWORK=&quot;${DEVICE_FRAMEWORK_OUT_DIR}/${FRAMEWORK_NAME}.framework&quot;  &#10;&#10;########################################################################  &#10;# Build Device Frameworks  &#10;########################################################################  &#10;xcodebuild -workspace ${PROJECT_NAME}.xcworkspace -scheme ${PROJECT_NAME} -sdk iphoneos ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} clean build CONFIGURATION_BUILD_DIR=${BUILD_DIR}/${CONFIGURATION}-iphoneos OBJROOT=&quot;${OBJROOT}/DependantBuilds&quot;   &#10;&#10;########################################################################  &#10;# Create directory for general  &#10;########################################################################  &#10;rm -rf &quot;${GENERATED_LIBRARY_DIR}&quot;  &#10;mkdir &quot;${GENERATED_LIBRARY_DIR}&quot;  &#10;mkdir &quot;${DEVICE_FRAMEWORK_OUT_DIR}&quot;  &#10;mkdir &quot;${FRAMEWORK}&quot;  &#10;&#10;########################################################################  &#10;# Copy files Framework  &#10;########################################################################  &#10;DEVICE_LIBRARY_PATH=&quot;${BUILD_DIR}/${CONFIGURATION}-iphoneos/${FRAMEWORK_NAME}.framework&quot;  &#10;&#10;########################################################################  &#10;# Make a binary for device ie. arm7, arm7v, arm8 file system  &#10;########################################################################  &#10;# For Swift framework, Swiftmodule needs to be copied in the universal framework   &#10;if [ -d &quot;${DEVICE_LIBRARY_PATH}/Modules/${FRAMEWORK_NAME}.swiftmodule/&quot; ]; then  &#10;cp -f &quot;${DEVICE_LIBRARY_PATH}/Modules/${FRAMEWORK_NAME}.swiftmodule/&quot;* &quot;${FRAMEWORK}/Modules/${FRAMEWORK_NAME}.swiftmodule/&quot; | echo  &#10;fi  &#10;cp -r &quot;${DEVICE_LIBRARY_PATH}/.&quot; &quot;${FRAMEWORK}&quot;  &#10;########################################################################  &#10;# Copy device build library in output folder  &#10;########################################################################  &#10;mkdir -p ${DEVICE_LIBRARY_OUT_DIR}  &#10;cp -r &quot;${FRAMEWORK}&quot; &quot;$DEVICE_LIBRARY_OUT_DIR&quot;  &#10;&#10;echo &quot;Device Lib Path ----&gt;&quot; &quot;${DEVICE_LIBRARY_PATH}&quot; &quot;&lt;----&quot;  &#10;&#10;if [ ${REVEAL_ARCHIVE_IN_FINDER} = true ]; then  &#10;open &quot;${DEVICE_LIBRARY_OUT_DIR}/&quot;  &#10;fi &#10;">
            </ActionContent>
         </ExecutionAction>
      </PostActions>
   </ArchiveAction>
</Scheme>
